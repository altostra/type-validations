# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  slack: circleci/slack@4.1.4
  gh-cli: mdgreenwald/gh-cli@0.0.2

  # Declare a dependency on the welcome-orb

jobs:
  test:
    docker:
      - image: cimg/node:16.15
    steps:
      - checkout

      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc

      - run:
          name: Npm install
          command: npm ci

      - run:
          name: Validate eslint configuration version
          command: ./scripts/build/validate-eslint-is-updated

      - run:
          name: ESLint
          command: npm run lint

      - run:
          name: Build
          command: npm run build:clean && npm run build

      - run:
          name: Run tests
          command: npm run test

      - save_cache:
          key: alto-core-build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - "."

  version-bump:
    docker:
      - image: cimg/node:16.15
    steps:
      - restore_cache:
          key: alto-core-build-{{ .Environment.CIRCLE_SHA1 }}

      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc

      - gh-cli/install:
          version: $GH_CLI_VERSION

      - run:
          name: gh-cli auth
          command: 'echo "$GH_CLI_TOKEN" | gh auth login --with-token'

      - run:
          name: set-git-config
          command: |
            # Set git config to the last author
            git config --global user.email "$(git log -1 --pretty=format:'%ae')"
            git config --global user.name "$(git log -1 --pretty=format:'%an')"

      - add_ssh_keys:
          fingerprints:
            - "ea:65:c1:e6:c3:92:16:76:63:d6:ee:8a:a2:1f:7f:6c"

      - run:
          name: set-ssh fingerprint
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts

      - run:
          name: version-bump
          command: ./scripts/build/bump-version


# Orchestrate or schedule a set of jobs
workflows:
  on-commit:
    jobs:
      - test
      - version-bump:
          context:
            - altostra
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - main
